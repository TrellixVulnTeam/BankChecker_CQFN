{"ast":null,"code":"import { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { NotificationService } from '../service/notification.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../service/notification.service\";\nexport let AuthenticationGuard = /*#__PURE__*/(() => {\n  class AuthenticationGuard {\n    constructor(authenticationService, router, notificationService) {\n      this.authenticationService = authenticationService;\n      this.router = router;\n      this.notificationService = notificationService;\n    }\n\n    canActivate(route, state) {\n      return this.isUserLoggedIn();\n    }\n\n    isUserLoggedIn() {\n      if (this.authenticationService.isLoggedIn()) {\n        return true;\n      }\n\n      this.router.navigate(['/login']);\n      this.notificationService.notify(NotificationType.ERROR, \"You need to log in to access this page.\");\n      return false;\n    }\n\n  }\n\n  AuthenticationGuard.ɵfac = function AuthenticationGuard_Factory(t) {\n    return new (t || AuthenticationGuard)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.NotificationService));\n  };\n\n  AuthenticationGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationGuard,\n    factory: AuthenticationGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}